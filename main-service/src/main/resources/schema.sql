CREATE SCHEMA IF NOT EXISTS public;

DROP TABLE IF EXISTS users, categories, events, compilations, compilations_events, requests, ratings;

CREATE TABLE IF NOT EXISTS categories (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(50) NOT NULL
    );

CREATE TABLE IF NOT EXISTS users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(250) NOT NULL,
    email VARCHAR(254) NOT NULL UNIQUE
    );

CREATE TABLE IF NOT EXISTS events(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    annotation TEXT NOT NULL,
    category_id BIGINT NOT NULL REFERENCES categories(id),
    created_on TIMESTAMP NOT NULL,
    event_date TIMESTAMP NOT NULL,
    description TEXT NOT NULL,
    initiator_id BIGINT NOT NULL REFERENCES users(id),
    lat REAL NOT NULL,
    lon REAL NOT NULL,
    paid BOOLEAN NOT NULL,
    participant_limit INT NOT NULL,
    published_on TIMESTAMP,
    request_moderation BOOLEAN NOT NULL,
    state VARCHAR(255) NOT NULL,
    title VARCHAR(255) NOT NULL
);

CREATE TABLE if not exists compilations (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    is_pinned BOOLEAN NOT NULL,
    title VARCHAR(50) NOT NULL
);

CREATE TABLE if not exists compilations_events (
    compilation_id BIGINT NOT NULL REFERENCES compilations (id) on delete cascade,
    event_id BIGINT NOT NULL REFERENCES events (id) on delete cascade,
    PRIMARY KEY (compilation_id, event_id)

);

CREATE TABLE IF NOT EXISTS requests (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    requester_id BIGINT NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    event_id BIGINT NOT NULL REFERENCES events(id) ON DELETE CASCADE,
    created TIMESTAMP NOT NULL,
    status VARCHAR(50) NOT NULL,
    CONSTRAINT UNIQUE_EVENT_REQUESTER UNIQUE (requester_id, event_id)
);

CREATE TABLE if not exists ratings (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    user_id BIGINT NOT NULL REFERENCES users (id) ON DELETE CASCADE,
    event_id BIGINT NOT NULL REFERENCES events (Id) ON DELETE CASCADE,
    mark VARCHAR NOT NULL,
    CONSTRAINT unique_user_likes_event UNIQUE (user_id, event_id)
);